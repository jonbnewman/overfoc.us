{"version":3,"sources":["pages/Home/contents.md","state/Project.ts","state/Store.ts","state/index.ts","theme.ts","components/AppGrid.ts","components/Header/HeaderArea.ts","components/Header/Container.ts","components/Header/Info.ts","components/Header/Name.ts","components/Header/Email.ts","components/Header/Github.ts","components/Header/Basic.ts","components/Header/Avatar/ImageAvatar.ts","components/Header/Avatar/LinkAvatar.tsx","components/Header/Avatar/Container.ts","components/Header/Avatar/index.tsx","components/Header/Menu/Container.ts","components/Header/Menu/MenuLink.tsx","components/Header/Menu/index.tsx","components/Header/index.tsx","components/Body/BodyArea.ts","components/Body/index.tsx","components/Footer/Content.ts","components/Footer/FooterArea.ts","components/Footer/GithubArea.ts","components/Footer/ControlsArea.ts","components/Footer/index.tsx","components/BackgroundEffect/Goo/EffectFilter.tsx","components/BackgroundEffect/Goo/EffectArea.ts","components/BackgroundEffect/Goo/Blob.ts","components/BackgroundEffect/Goo/index.tsx","components/BackgroundEffect/Children.ts","components/BackgroundEffect/index.tsx","components/Background.ts","pages/LoadingDisplay.tsx","components/MarkdownStyles.ts","pages/Home/Paper.ts","pages/Home/HomePage.tsx","pages/Home/index.tsx","pages/ProjectList/ProjectDisplay/Link.ts","pages/ProjectList/ProjectDisplay/CardActions.ts","pages/ProjectList/ProjectDisplay/Button.ts","pages/ProjectList/ProjectDisplay/index.tsx","pages/ProjectList/Container.ts","pages/ProjectList/index.tsx","App.tsx","index.tsx"],"names":["module","exports","Project","types","model","name","string","url","maybe","github","image","status","description","array","getStatusLabel","charAt","toUpperCase","slice","getStatusPath","showBackgroundEffect","localStorage","getItem","JSON","parse","projectStatus","Store","email","build_state","circleci","site_repo","projects","pagePath","maybeNull","isLoading","loadedMarkdown","optional","boolean","views","self","reduce","statusTypes","project","find","push","label","path","project_status_types","statusType","filter","current_status_type","actions","toggleBackgroundEffect","setItem","setPagePath","fetchMarkdown","flow","markdown","fetch","then","response","text","addMarkdown","loadMarkdown","paths","markdownFetches","map","Promise","all","data","appState","active","archived","colors","blue","deepOrange","red","indigo","grey","deepPurple","blueGrey","breakpoints","xs","sm","md","lg","xl","secondaryMain","Math","floor","random","length","lineColor","chroma","darken","upTo","breakpoint","cssStyles","breakingCSS","css","createMuiTheme","palette","type","primary","main","secondary","typography","fontFamily","htmlFontSize","button","textTransform","props","MuiTextField","variant","MuiLink","underline","color","MuiButton","disableElevation","styled","Container","attrs","disableGutters","maxWidth","theme","spacing","header","div","Link","noDisplay","Avatar","downTo","ImageAvatar","Image","img","LinkAvatar","alt","src","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","href","title","store","useStore","Button","exact","component","RouterLink","size","Menu","to","key","Header","HeaderArea","Info","Basic","Name","Email","Github","startIcon","Body","children","BodyArea","footer","observer","FooterArea","Content","ControlsArea","FormControlLabel","control","Switch","checked","onClick","inputProps","GithubArea","Chip","icon","clickable","SVG","svg","EffectFilter","id","show","blobColor","animated","brighten","hex","fast","tension","friction","slow","mass","trans","x","y","useTrail","xy","config","i","trail","set","useEffect","mouseMoved","event","clientX","clientY","document","addEventListener","removeEventListener","in","stdDeviation","values","EffectArea","index","Blob","style","transform","interpolate","effects","Goo","BackgroundEffect","Effect","Children","LoadingDisplay","CircularProgress","Paper","HomePage","wobbly","opacity","MarkdownStyles","animation","source","location","require","pathname","CardActions","area","ProjectDisplay","Card","CardActionArea","Typography","gutterBottom","desc","endIcon","projects_list","App","createStore","create","Provider","useProvider","value","Background","AppGrid","ProjectList","Home","mobxConfig","enforceActions","ReactDOM","render","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.85f44324.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/contents.1d53ff0d.md\";","import { types, Instance } from \"mobx-state-tree\";\n\nexport const Project = types.model({\n  name: types.string,\n  url: types.maybe(types.string),\n  github: types.maybe(types.string),\n  image: types.maybe(types.string),\n  status: types.string,\n  description: types.array(types.string),\n});\n\nexport interface IProject extends Instance<typeof Project> {}\n","import { types, flow, Instance } from \"mobx-state-tree\";\nimport { Project } from \"./Project\";\n\nfunction getStatusLabel(status: string) {\n  return status.charAt(0).toUpperCase() + status.slice(1);\n}\n\nfunction getStatusPath(status: string) {\n  return `/projects/${status}`;\n}\n\nfunction getStatus(status: string) {\n  return status;\n}\n\nfunction getStatusObject(status: string) {\n  return {\n    label: getStatusLabel(status),\n    path: getStatusPath(status),\n    status: getStatus(status),\n  };\n}\n\nlet showBackgroundEffect: any = localStorage.getItem(\"showBackgroundEffect\");\nshowBackgroundEffect = showBackgroundEffect === null ? true : JSON.parse(showBackgroundEffect);\n\nexport const Store = types\n  .model({\n    name: types.string,\n    email: types.string,\n    github: types.string,\n    build_state: types.string,\n    circleci: types.string,\n    site_repo: types.string,\n    image: types.string,\n    projects: types.array(Project),\n    pagePath: types.maybeNull(types.string),\n    isLoading: false,\n    loadedMarkdown: types.array(types.string),\n    showBackgroundEffect: types.optional(types.boolean, showBackgroundEffect),\n  })\n  .views(self => ({\n    get project_status_types() {\n      return self.projects.reduce((statusTypes: any[], project: any) => {\n        if (!statusTypes.find(({ status }) => status === project.status)) {\n          statusTypes.push(getStatusObject(project.status));\n        }\n        return statusTypes;\n      }, []);\n    },\n  }))\n  .views(self => ({\n    get current_status_type() {\n      return self.project_status_types.find(statusType => statusType.path === self.pagePath);\n    },\n  }))\n  .views(self => ({\n    get projects_list() {\n      return self.projects.filter(project => project.status === self.current_status_type?.status);\n    },\n  }))\n  .actions(self => ({\n    toggleBackgroundEffect() {\n      self.showBackgroundEffect = !self.showBackgroundEffect;\n      localStorage.setItem(\"showBackgroundEffect\", self.showBackgroundEffect ? \"true\" : \"false\");\n    },\n    setPagePath(path: string) {\n      self.pagePath = path;\n      return self;\n    },\n    fetchMarkdown: flow(function* fetchMarkdown(path) {\n      let markdown: string | null = null;\n      try {\n        markdown = yield fetch(path).then(response => response.text());\n      } catch (error) {\n        throw error;\n      }\n      return markdown;\n    }),\n    addMarkdown(markdown: string) {\n      self.loadedMarkdown.push(markdown);\n    },\n  }))\n  .actions(self => ({\n    loadMarkdown: flow(function* loadMarkdown(paths: string[]) {\n      if (!self.isLoading) {\n        self.isLoading = true;\n        const markdownFetches: Promise<any>[] = paths.map(self.fetchMarkdown);\n        try {\n          const data = yield Promise.all(markdownFetches);\n          self.loadedMarkdown = data;\n        } catch (error) {\n          throw error;\n        }\n        self.isLoading = false;\n      }\n      return self.loadedMarkdown;\n    }),\n  }));\n\nexport interface IStore extends Instance<typeof Store> {}\n","export enum projectStatus {\n  active = \"active\",\n  archived = \"archived\",\n}\n\nexport const projects = [\n  {\n    name: \"mobx-store-provider\",\n    github: \"http://github.com/jonbnewman/mobx-store-provider\",\n    url: \"http://mobx-store-provider.overfoc.us\",\n    status: projectStatus.active,\n    description: [\n      \"**mobx-store-provider** is a library that provides **React Hooks** to setup and access **mobx-state-tree** models from within **React Function Components**\",\n    ],\n  },\n  {\n    name: \"Footwork\",\n    github: \"https://github.com/footworkjs/footwork\",\n    url: \"http://footworkjs.com\",\n    image: \"/images/projects/footwork.png\",\n    status: projectStatus.archived,\n    description: [\n      \"Footwork is a frontend framework based on KnockoutJS.\",\n      \"It aims to be fully featured, expressive, and easy to use while remaining as idiomatic and compatible with KnockoutJS as possible.\",\n    ],\n  },\n  {\n    name: \"jQuery Placement\",\n    github: \"https://github.com/jonbnewman/jquery.placement\",\n    status: projectStatus.archived,\n    description: [\"jQuery plugin providing an easy way of getting all of an elements layout information.\"],\n  },\n  {\n    name: \"Memoro\",\n    github: \"https://github.com/jonbnewman/Memoro\",\n    status: projectStatus.archived,\n    description: [\"An experimental DB abstraction/ORM written in PHP\"],\n  },\n  {\n    name: \"Despot\",\n    github: \"https://github.com/jonbnewman/Despot\",\n    status: projectStatus.archived,\n    description: [\"An experimental PHP web framework\"],\n  },\n];\n\nexport const appState = {\n  name: \"Jonathan Newman\",\n  email: \"jbnewm@gmail.com\",\n  github: \"https://github.com/jonbnewman\",\n  image: \"/images/face.jpg\",\n  build_state: \"https://circleci.com/gh/jonbnewman/overfoc.us.svg?style=svg\",\n  circleci: \"https://circleci.com/gh/jonbnewman/overfoc.us\",\n  site_repo: \"https://github.com/jonbnewman/overfoc.us\",\n  projects,\n};\n","import { css } from \"styled-components\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport chroma from \"chroma-js\";\n\nimport { blue, deepOrange, red, indigo, grey, deepPurple, blueGrey } from \"@material-ui/core/colors\";\nconst colors = [blue, deepOrange, red, indigo, grey, deepPurple, blueGrey];\n\nconst breakpoints: any = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n};\n\nconst color = colors[Math.floor(Math.random() * colors.length)];\nconst colorCode = 900;\n\nexport const secondaryMain = color[colorCode];\nexport const lineColor = chroma(secondaryMain).darken(2);\nexport const headerFooterBg = \"white\";\nexport const headerPadding = \"1rem\";\nexport const imageSize = \"4rem\";\nexport const headerHeight = `calc(${imageSize} + (2 * ${headerPadding}))`;\nexport const headerCollapseSize = \"sm\";\nexport const constraintSize = \"md\";\n\nexport function upTo(breakpoint: string | number, cssStyles: any = null) {\n  return (...args: any[]) => {\n    let breakingCSS: any;\n    if (!cssStyles) {\n      // @ts-ignore\n      breakingCSS = css(...args);\n    } else {\n      breakingCSS = cssStyles;\n    }\n\n    return css`\n      @media (max-width: ${(typeof breakpoint === \"string\" ? breakpoints[breakpoint] : breakpoint - 1) / 16}em) {\n        ${breakingCSS};\n      }\n    `;\n  };\n}\n\nexport function downTo(breakpoint: string | number, cssStyles: any = null) {\n  return (...args: any[]) => {\n    let breakingCSS: any;\n    if (!cssStyles) {\n      // @ts-ignore\n      breakingCSS = css(...args);\n    } else {\n      breakingCSS = cssStyles;\n    }\n\n    return css`\n      @media (min-width: ${(typeof breakpoint === \"string\" ? breakpoints[breakpoint] : breakpoint + 1) / 16}em) {\n        ${breakingCSS};\n      }\n    `;\n  };\n}\n\nexport default createMuiTheme({\n  palette: {\n    type: \"light\",\n    primary: {\n      main: grey[800],\n    },\n    secondary: {\n      main: secondaryMain,\n    },\n  },\n  typography: {\n    fontFamily: \"Lato\",\n    htmlFontSize: 16,\n    button: {\n      textTransform: \"none\",\n    },\n  },\n  props: {\n    MuiTextField: {\n      variant: \"outlined\",\n    },\n    MuiLink: {\n      underline: \"hover\",\n      color: \"secondary\",\n    },\n    MuiButton: {\n      disableElevation: true,\n    },\n  },\n});\n","import styled from \"styled-components/macro\";\nimport Container from \"@material-ui/core/Container\";\nimport theme from \"theme\";\n\nexport default styled(Container).attrs({ disableGutters: true, maxWidth: false })`\n  display: grid;\n  grid-template-rows: auto 1fr 120px;\n  grid-template-areas:\n    \"header\"\n    \"body\"\n    \"footer\";\n  grid-row-gap: ${`${theme.spacing(3)}px`};\n  min-height: 100vh;\n  font-family: \"Lato\", sans-serif;\n\n  * {\n    box-sizing: border-box;\n  }\n`;\n","import styled from \"styled-components/macro\";\nimport { headerFooterBg, lineColor } from \"theme\";\n\nexport default styled.header`\n  grid-area: header;\n  background: ${headerFooterBg};\n  border-bottom: ${`1px solid ${lineColor}`};\n`;\n","import styled from \"styled-components/macro\";\nimport Container from \"@material-ui/core/Container\";\nimport { upTo, headerCollapseSize, constraintSize } from \"theme\";\n\nexport default styled(Container).attrs({ maxWidth: constraintSize })`\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  grid-template-rows: 1fr auto;\n  grid-template-areas:\n    \"info . github\"\n    \"info menu menu\";\n\n  ${upTo(headerCollapseSize)`\n    grid-template-columns: 1fr auto;\n    grid-template-areas:\n      \". info\"\n      \". github\"\n      \"menu menu\";\n  `}\n`;\n","import styled from \"styled-components/macro\";\nimport { upTo, headerCollapseSize } from \"theme\";\n\nexport default styled.div`\n  grid-area: info;\n  display: grid;\n  grid-template-columns: auto 1fr;\n  grid-template-areas: \"image basic\";\n  grid-column-gap: 1rem;\n  padding: 1rem 0;\n\n  ${upTo(headerCollapseSize)`\n    grid-template-areas: \"basic image\";\n  `}\n`;\n","import styled from \"styled-components/macro\";\n\nexport default styled.div`\n  align-self: center;\n  justify-self: start;\n  font-size: 0.8rem;\n`;\n","import styled from \"styled-components/macro\";\nimport Link from \"@material-ui/core/Link\";\n\nexport default styled(Link)`\n  align-self: center;\n  justify-self: start;\n  font-size: 0.8rem;\n`;\n","import styled from \"styled-components/macro\";\nimport { upTo, headerCollapseSize } from \"theme\";\n\nexport default styled.div`\n  grid-area: github;\n  align-self: center;\n\n  ${upTo(headerCollapseSize)`\n    justify-self: end;\n    padding-bottom: 1rem;\n    display: none;\n  `}\n`;\n","import styled from \"styled-components/macro\";\n\nexport default styled.div`\n  grid-area: basic;\n  align-self: center;\n`;\n","import styled, { css } from \"styled-components/macro\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { imageSize, upTo, headerCollapseSize } from \"theme\";\n\nconst noDisplay = css`\n  display: none;\n`;\n\nexport default styled(Avatar)`\n  grid-area: image;\n  align-self: center;\n\n  && {\n    width: ${imageSize};\n    height: ${imageSize};\n    ${upTo(headerCollapseSize, noDisplay)}\n  }\n`;\n","import React from \"react\";\nimport styled, { css } from \"styled-components/macro\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { imageSize, headerCollapseSize, downTo, headerFooterBg } from \"theme\";\nimport { Link } from \"@material-ui/core\";\n\nconst noDisplay = css`\n  display: none;\n`;\n\nconst Container = styled.div`\n  grid-area: image;\n  align-self: center;\n  ${downTo(headerCollapseSize, noDisplay)}\n`;\n\nconst ImageAvatar = styled(Avatar)`\n  && {\n    width: ${imageSize};\n    height: ${imageSize};\n  }\n`;\n\nconst Image = styled.img`\n  border-radius: 24px;\n  border: 3px solid ${headerFooterBg};\n  background: ${headerFooterBg};\n  &:hover {\n    box-shadow: 0 1px 3px -1px black;\n  }\n  &:active {\n    box-shadow: none;\n  }\n`;\n\ninterface LinkAvatarInterface {\n  alt: string;\n  src: string;\n  github: string;\n}\n\nfunction LinkAvatar({ alt, src, github }: LinkAvatarInterface) {\n  return (\n    <Container>\n      <Badge\n        overlap=\"circle\"\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        badgeContent={\n          <Link href={github}>\n            <Image alt=\"Github\" title=\"View my GitHub\" src=\"/images/github.png\" />\n          </Link>\n        }\n      >\n        <ImageAvatar alt={alt} src={src} />\n      </Badge>\n    </Container>\n  );\n}\n\nexport default LinkAvatar;\n","import styled from \"styled-components/macro\";\n\nexport default styled.div`\n  grid-area: image;\n  align-self: center;\n`;\n","import React from \"react\";\nimport { useStore } from \"mobx-store-provider\";\nimport { IStore } from \"state/Store\";\n\nimport ImageAvatar from \"./ImageAvatar\";\nimport LinkAvatar from \"./LinkAvatar\";\nimport Container from \"./Container\";\n\nfunction Avatar() {\n  const store: IStore = useStore();\n  return (\n    <Container>\n      <ImageAvatar alt={store.name} src={store.image} />\n      <LinkAvatar alt={store.name} src={store.image} github={store.github} />\n    </Container>\n  );\n}\n\nexport default Avatar;\n","import styled from \"styled-components/macro\";\n\nexport default styled.div`\n  grid-area: menu;\n  justify-self: end;\n  display: grid;\n  grid-auto-flow: column;\n  grid-column-gap: 0.5rem;\n  padding-bottom: 0.5rem;\n`;\n","import React from \"react\";\nimport styled from \"styled-components/macro\";\nimport { NavLink as RouterLink } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\ninterface MenuLinkInterface {\n  to: string;\n  startIcon?: any;\n  children: any;\n}\n\nfunction MenuLink(props: MenuLinkInterface) {\n  return <Button exact component={RouterLink} {...props} size=\"small\" color=\"secondary\" />;\n}\n\nexport default styled(MenuLink)`\n  && {\n    opacity: 0.6;\n    font-weight: 600;\n    min-width: 0;\n    padding-left: 0.5rem;\n    padding-right: 0.5rem;\n\n    &:hover {\n      opacity: 1;\n    }\n\n    &.active {\n      opacity: 1;\n    }\n  }\n`;\n","import React from \"react\";\nimport { useStore } from \"mobx-store-provider\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport { IStore } from \"state/Store\";\nimport Container from \"./Container\";\nimport MenuLink from \"./MenuLink\";\n\nfunction Menu() {\n  const store: IStore = useStore();\n  return (\n    <Container>\n      <MenuLink to=\"/\">\n        <HomeIcon />\n      </MenuLink>\n      {store.project_status_types.map((statusType: any) => (\n        <MenuLink key={statusType.status} to={statusType.path}>\n          {statusType.label}\n        </MenuLink>\n      ))}\n    </Container>\n  );\n}\n\nexport default Menu;\n","import React from \"react\";\nimport { useStore } from \"mobx-store-provider\";\nimport Button from \"@material-ui/core/Button\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\n\nimport { IStore } from \"state/Store\";\n\nimport HeaderArea from \"./HeaderArea\";\nimport Container from \"./Container\";\nimport Info from \"./Info\";\nimport Name from \"./Name\";\nimport Email from \"./Email\";\nimport Github from \"./Github\";\nimport Basic from \"./Basic\";\nimport Avatar from \"./Avatar\";\nimport Menu from \"./Menu\";\n\nfunction Header() {\n  const store: IStore = useStore();\n  return (\n    <HeaderArea>\n      <Container>\n        <Info>\n          <Avatar />\n          <Basic>\n            <Name>{store.name}</Name>\n            <Email href={`mailto:${store.email}`}>{store.email}</Email>\n          </Basic>\n        </Info>\n        <Github>\n          <Button size=\"small\" variant=\"contained\" color=\"secondary\" href={store.github} startIcon={<GitHubIcon />}>\n            Github\n          </Button>\n        </Github>\n        <Menu />\n      </Container>\n    </HeaderArea>\n  );\n}\n\nexport default Header;\n","import styled from \"styled-components/macro\";\nimport Container from \"@material-ui/core/Container\";\nimport { constraintSize } from \"theme\";\n\nexport default styled(Container).attrs({ maxWidth: constraintSize, component: \"main\" })`\n  grid-area: body;\n`;\n","import React from \"react\";\nimport BodyArea from \"./BodyArea\";\n\ninterface BodyInterface {\n  children: any;\n}\n\nfunction Body({ children }: BodyInterface) {\n  return <BodyArea>{children}</BodyArea>;\n}\n\nexport default Body;\n","import styled from \"styled-components/macro\";\nimport Container from \"@material-ui/core/Container\";\nimport { constraintSize } from \"theme\";\n\nexport default styled(Container).attrs({ maxWidth: constraintSize })`\n  padding-top: 1rem;\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  grid-template-areas: \"controls . github\";\n`;\n","import styled from \"styled-components/macro\";\nimport { headerFooterBg, lineColor } from \"theme\";\n\nexport default styled.footer`\n  grid-area: footer;\n  background: ${headerFooterBg};\n  border-top: ${`1px solid ${lineColor}`};\n`;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  grid-area: github;\n  display: grid;\n  grid-auto-flow: row;\n  grid-row-gap: 0.5rem;\n  text-align: right;\n`;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  grid-area: controls;\n  display: grid;\n  grid-auto-flow: row;\n  align-content: start;\n`;\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport Link from \"@material-ui/core/Link\";\nimport Chip from \"@material-ui/core/Chip\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { useStore } from \"mobx-store-provider\";\nimport { IStore } from \"state/Store\";\nimport Content from \"./Content\";\nimport FooterArea from \"./FooterArea\";\nimport GithubArea from \"./GithubArea\";\nimport ControlsArea from \"./ControlsArea\";\n\nfunction Footer() {\n  const store: IStore = useStore();\n  return (\n    <FooterArea>\n      <Content>\n        <ControlsArea>\n          <FormControlLabel\n            label=\"Background effect\"\n            control={\n              <Switch\n                checked={store.showBackgroundEffect}\n                onClick={store.toggleBackgroundEffect}\n                color=\"secondary\"\n                inputProps={{ \"aria-label\": \"Show background effect\" }}\n              />\n            }\n          />\n        </ControlsArea>\n        <GithubArea>\n          <div>\n            <Chip\n              component=\"a\"\n              href={store.site_repo}\n              icon={<GitHubIcon />}\n              label=\"view on GitHub\"\n              color=\"secondary\"\n              clickable\n            />\n          </div>\n          <div>\n            <Link href={store.circleci}>\n              <img alt=\"Latest CircleCI build status\" src={store.build_state} />\n            </Link>\n          </div>\n        </GithubArea>\n      </Content>\n    </FooterArea>\n  );\n}\n\nexport default observer(Footer);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst SVG = styled.svg`\n  position: absolute;\n  width: 0;\n  height: 0;\n`;\n\ninterface EffectFilterInterface {\n  children: any;\n}\n\nfunction EffectFilter({ children }: EffectFilterInterface) {\n  return (\n    <SVG>\n      <filter id=\"effect-filter\">{children}</filter>\n    </SVG>\n  );\n}\n\nexport default EffectFilter;\n","import styled from \"styled-components\";\n\ninterface EffectAreaInterface {\n  show: string;\n}\n\nexport default styled.div<EffectAreaInterface>`\n  display: ${({ show }) => (show === \"true\" ? \"block\" : \"none\")};\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  filter: url(\"#effect-filter\");\n  overflow: hidden;\n\n  & > svg {\n    display: none;\n  }\n`;\n","import styled from \"styled-components\";\nimport { animated } from \"react-spring\";\nimport chroma from \"chroma-js\";\nimport { secondaryMain } from \"theme\";\n\nconst blobColor = chroma(secondaryMain);\n\nexport default animated<any>(styled.div`\n  position: absolute;\n  will-change: transform;\n  border-radius: 50%;\n  box-shadow: 10px 10px 5px 0px rgba(0, 0, 0, 0.75);\n  opacity: 0.6;\n\n  &:nth-child(1) {\n    width: 120px;\n    height: 120px;\n    background: ${blobColor.brighten(3).hex()};\n  }\n\n  &:nth-child(2) {\n    width: 250px;\n    height: 250px;\n    background: ${blobColor.brighten(2).hex()};\n  }\n\n  &:nth-child(3) {\n    width: 150px;\n    height: 150px;\n    background: ${blobColor.brighten(4).hex()};\n  }\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 20px;\n    left: 20px;\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    background: rgba(255, 255, 255, 0.8);\n  }\n\n  &:nth-child(2)::after {\n    top: 70px;\n    left: 70px;\n    width: 70px;\n    height: 70px;\n  }\n  &:nth-child(3)::after {\n    top: 50px;\n    left: 50px;\n    width: 50px;\n    height: 50px;\n  }\n`);\n","import React, { useEffect } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { useStore } from \"mobx-store-provider\";\nimport { useTrail } from \"react-spring\";\nimport { IStore } from \"state/Store\";\n\nimport EffectFilter from \"./EffectFilter\";\nimport EffectArea from \"./EffectArea\";\nimport Blob from \"./Blob\";\n\n/**\n * Credits/disclosure, this effect heavily influenced by:\n * https://www.react-spring.io/docs/hooks/examples\n */\n\nconst fast = { tension: 1200, friction: 40 };\nconst slow = { mass: 10, tension: 200, friction: 50 };\nconst trans = (x: number, y: number) => `translate3d(${x}px,${y}px,0) translate3d(-50%,-50%,0)`;\n\nfunction Goo() {\n  // @ts-ignore\n  const [trail, set] = useTrail(3, () => ({ xy: [0, 0], config: i => (i === 0 ? fast : slow) }));\n  const store: IStore = useStore();\n\n  useEffect(() => {\n    function mouseMoved(event: MouseEvent) {\n      // @ts-ignore\n      set({ xy: [event.clientX, event.clientY] });\n    }\n    document.addEventListener(\"mousemove\", mouseMoved);\n    return () => document.removeEventListener(\"mousemove\", mouseMoved);\n  }, [set]);\n\n  return (\n    <>\n      <EffectFilter>\n        <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"30\" />\n        <feColorMatrix values=\"1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 30 -7\" />\n      </EffectFilter>\n      <EffectArea show={store.showBackgroundEffect ? \"true\" : \"false\"}>\n        {trail.map((props, index) => {\n          // @ts-ignore\n          return <Blob key={index} style={{ transform: props.xy.interpolate(trans) }} />;\n        })}\n      </EffectArea>\n    </>\n  );\n}\n\nexport default observer(Goo);\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  position: relative;\n`;\n","import React from \"react\";\nimport Goo from \"./Goo\";\nimport Children from \"./Children\";\n\nexport interface BackgroundEffectInterface {\n  children?: any;\n}\n\nconst effects = [Goo];\n\nfunction BackgroundEffect(props: BackgroundEffectInterface) {\n  const Effect = effects[Math.floor(Math.random() * effects.length)];\n  return (\n    <>\n      <Effect />\n      <Children {...props} />\n    </>\n  );\n}\n\nexport default BackgroundEffect;\n","import styled from \"styled-components/macro\";\nimport { secondaryMain } from \"theme\";\n\nexport default styled.div`\n  background: ${secondaryMain};\n  width: 100vw;\n  min-height: 100vh;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Container = styled.div`\n  padding-top: 3rem;\n  text-align: center;\n`;\n\nfunction LoadingDisplay() {\n  return (\n    <Container>\n      <CircularProgress />\n    </Container>\n  );\n}\n\nexport default LoadingDisplay;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  p:last-child {\n    margin: 0;\n  }\n\n  h1:first-child {\n    margin-top: 0;\n  }\n\n  a {\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n","import styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport theme from \"theme\";\n\nexport default styled(Paper)`\n  padding: ${`${theme.spacing(3)}px`};\n`;\n","import React from \"react\";\nimport { useTrail, animated, config } from \"react-spring\";\nimport { useStore } from \"mobx-store-provider\";\nimport ReactMarkdown from \"react-markdown\";\nimport Container from \"@material-ui/core/Container\";\nimport { IStore } from \"state/Store\";\nimport theme from \"theme\";\nimport MarkdownStyles from \"components/MarkdownStyles\";\nimport Paper from \"./Paper\";\n\nfunction HomePage() {\n  const store: IStore = useStore();\n\n  const [trail, set] = useTrail(store.loadedMarkdown.length, () => ({\n    config: config.wobbly,\n    opacity: 0,\n    transform: `translate3d(0px, ${theme.spacing(2)}px, 0px)`,\n  }));\n  // @ts-ignore\n  set({ opacity: 1, transform: `translate3d(0px, 0px, 0px)` });\n\n  return (\n    <Container disableGutters maxWidth=\"sm\">\n      <MarkdownStyles>\n        {trail.map((animation, index) => (\n          <animated.div style={animation} key={index}>\n            <Paper>\n              <ReactMarkdown source={store.loadedMarkdown[index]} />\n            </Paper>\n          </animated.div>\n        ))}\n      </MarkdownStyles>\n    </Container>\n  );\n}\n\nexport default HomePage;\n","import React, { useEffect } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { useStore } from \"mobx-store-provider\";\nimport { IStore } from \"state/Store\";\nimport PageInterface from \"../PageInterface\";\nimport LoadingDisplay from \"pages/LoadingDisplay\";\nimport HomePage from \"./HomePage\";\n\nfunction Home({ location }: PageInterface) {\n  const store: IStore = useStore();\n\n  useEffect(() => {\n    store.loadMarkdown([require(\"./contents.md\")]);\n    store.setPagePath(location.pathname);\n  }, [store, location.pathname]);\n\n  return store.isLoading ? <LoadingDisplay /> : <HomePage />;\n}\n\nexport default observer(Home);\n","import styled from \"styled-components\";\nimport Link from \"@material-ui/core/Link\";\nimport theme from \"theme\";\n\nexport default styled(Link)`\n  padding: ${`${theme.spacing(2)}px`};\n  display: block;\n\n  && {\n    &:hover {\n      text-decoration: none;\n    }\n  }\n`;\n","import styled from \"styled-components\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport theme from \"theme\";\n\nexport default styled(CardActions)`\n  && {\n    padding: ${`${theme.spacing(1)}px`};\n    display: grid;\n    grid-template-columns: auto 1fr auto;\n    grid-template-areas: \"github . project\";\n    grid-column-gap: ${`${theme.spacing(1)}px`};\n  }\n`;\n","import styled from \"styled-components\";\nimport Button, { ButtonProps } from \"@material-ui/core/Button\";\n\ninterface ButtonAreaInterface {\n  area: string;\n  component: any;\n}\n\nexport default styled(Button)<ButtonAreaInterface & ButtonProps>`\n  grid-area: ${({ area }: any) => area};\n`;\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\n\nimport { IProject } from \"state/Project\";\nimport MarkdownStyles from \"components/MarkdownStyles\";\nimport Link from \"./Link\";\nimport CardActions from \"./CardActions\";\nimport Button from \"./Button\";\n\ninterface ProjectDisplayInterface {\n  project: IProject;\n}\n\nfunction ProjectDisplay({ project: { name, image, description, github, url } }: ProjectDisplayInterface) {\n  return (\n    <Container disableGutters maxWidth=\"sm\">\n      <Card>\n        <CardActionArea>\n          <Link href={url || github}>\n            <MarkdownStyles>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {name}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"div\">\n                {description.map((desc, id) => (\n                  <ReactMarkdown source={desc} key={id} />\n                ))}\n              </Typography>\n            </MarkdownStyles>\n          </Link>\n        </CardActionArea>\n        <CardActions>\n          {github && (\n            <Button component=\"a\" area=\"github\" startIcon={<GitHubIcon />} href={github} variant=\"contained\">\n              view on GitHub\n            </Button>\n          )}\n          {url && (\n            <Button\n              component=\"a\"\n              area=\"project\"\n              href={url}\n              endIcon={<KeyboardArrowRightIcon />}\n              variant=\"contained\"\n              color=\"secondary\"\n            >\n              Project site\n            </Button>\n          )}\n        </CardActions>\n      </Card>\n    </Container>\n  );\n}\n\nexport default ProjectDisplay;\n","import styled from \"styled-components/macro\";\n\nexport default styled.div`\n  display: grid;\n  grid-auto-flow: row;\n  grid-row-gap: 1rem;\n`;\n","import React, { useEffect } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { useStore } from \"mobx-store-provider\";\nimport { useTrail, animated, config } from \"react-spring\";\nimport theme from \"theme\";\nimport { IStore } from \"state/Store\";\nimport PageInterface from \"../PageInterface\";\nimport ProjectDisplay from \"./ProjectDisplay\";\nimport Container from \"./Container\";\n\nfunction ProjectList({ location }: PageInterface): JSX.Element {\n  const store: IStore = useStore();\n\n  useEffect(() => {\n    store.setPagePath(location.pathname);\n  }, [store, location.pathname]);\n\n  const [trail, set] = useTrail(store.projects_list.length, () => ({\n    config: config.wobbly,\n    opacity: 0,\n    transform: `translate3d(0px, ${theme.spacing(2)}px, 0px)`,\n  }));\n  // @ts-ignore\n  set({ opacity: 1, transform: `translate3d(0px, 0px, 0px)` });\n\n  return (\n    <Container>\n      {trail.map((animation, index) => (\n        <animated.div style={animation} key={index}>\n          <ProjectDisplay project={store.projects_list[index]} />\n        </animated.div>\n      ))}\n    </Container>\n  );\n}\n\nexport default observer(ProjectList);\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { createStore, useProvider } from \"mobx-store-provider\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nimport { Store, IStore } from \"state/Store\";\nimport { appState } from \"state\";\n\nimport AppGrid from \"components/AppGrid\";\nimport Header from \"components/Header\";\nimport Body from \"components/Body\";\nimport Footer from \"components/Footer\";\nimport BackgroundEffect from \"components/BackgroundEffect\";\nimport Background from \"components/Background\";\n\nimport Home from \"pages/Home\";\nimport ProjectList from \"pages/ProjectList\";\n\ndeclare global {\n  interface Window {\n    store: any;\n  }\n}\n\nfunction App() {\n  const store: IStore = createStore(() => Store.create(appState));\n  const Provider = useProvider();\n\n  if (process.env.NODE_ENV !== \"production\") {\n    window.store = store;\n  }\n\n  return (\n    <Provider value={store}>\n      <Background>\n        <Router>\n          <BackgroundEffect>\n            <AppGrid>\n              <Header />\n              <Body>\n                <Switch>\n                  {store.project_status_types.map(statusType => (\n                    <Route path={statusType.path} component={ProjectList} key={statusType.status} />\n                  ))}\n                  <Route path=\"/\" component={Home} />\n                </Switch>\n              </Body>\n              <Footer />\n            </AppGrid>\n          </BackgroundEffect>\n        </Router>\n      </Background>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"normalize.css\";\nimport { configure as mobxConfig } from \"mobx\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme\";\n\nmobxConfig({ enforceActions: \"observed\" });\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}